services:
  app:
      # image: master-image
      build:
        context: .
        dockerfile: Dockerfile
      restart: always
      container_name: fastedu-app
      ports:
        - "8000:8000"
      networks:
        - fastedu-network
      env_file:
        - .env
      depends_on:
        postgres:
          condition: service_healthy
      environment:
        DOCKER: "true"
        # DATABASE_URL: "postgresql+asyncpg://postgres:postgres@password:5432/kace_mobile"
        DATABASE_URL: "postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}:${POSTGRES_SERVER}:${POSTGRES_PORT}/${POSTGRES_DB}"
        command: bash -c "alembic revision --autogenerate -m 'new' && alembic upgrade head"

  pgadmin:
    build:
      context: ./pgadmin
      dockerfile: dockerfile
    container_name: pgadmin
    restart: always
    ports:
      - "8081:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - fastedu-network
    depends_on:
      - postgres

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    networks:
      - fastedu-network
    ports: # Use ports instead of expose for host binding
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: kace_mobile
      POSTGRES_USER: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    expose:
      - "6379"
    networks:
      - fastedu-network
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"

  

volumes:
  pgadmin_data:
  postgres_data:
    driver: local

networks:
  fastedu-network:
    driver: bridge
